version: '3.8'

networks:
  bridge-net:
    driver: bridge

services:
  zookeeper:
    image: debezium/zookeeper:2.7
    container_name: zookeeper
    environment:
      SERVER_ID: 1
      SERVER_COUNT: 1
    ports:
      - '2181:2181'
    networks:
      - bridge-net

  kafka:
    image: debezium/kafka:2.7
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      BROKER_ID: 1
      ZOOKEEPER_CONNECT: zookeeper:2181
      HOST_NAME: kafka
      ADVERTISED_HOST_NAME: kafka  # Thay đổi từ localhost thành kafka
    ports:
      - '9092:9092'
    networks:
      - bridge-net

  debezium-connect:
    container_name: debezium-connect
    image: debezium/connect:2.7
    ports:
      - '8083:8083'
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      BOOTSTRAP_SERVERS: kafka:9092
      HOST_NAME: debezium-connect
      ADVERTISED_HOST_NAME: debezium-connect
      ADVERTISED_PORT: 8083
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    networks:
      - bridge-net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    networks:
      - bridge-net

  postgresql-db:
    container_name: postgresql-db-container
    image: debezium/postgres:16-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: grocery
    volumes:
      - grocery-finder-postgresql-db:/var/lib/postgresql/data
    networks:
      - bridge-net

  redis:
    container_name: redis-container
    image: redis:7.4.0-alpine
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - bridge-net

  grocery-finder-spring-boot:
    container_name: grocery-finder-spring-boot-container
    image: grocery-finder-spring-boot:1.0
    ports:
      - "3333:3333"
    depends_on:
      - postgresql-db
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql-db:5432/grocery?autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
    networks:
      - bridge-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.24
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - bridge-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.24
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    depends_on:
      - elasticsearch
    networks:
      - bridge-net

volumes:
  grocery-finder-postgresql-db:
  redis-data:
  es-data:

# $ curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" localhost:8083/connectors/ -d @register-postgres.json